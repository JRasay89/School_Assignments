// Generated by CoffeeScript 1.7.1

/*
A very primitive class that supports drawing a circle on a HTML5 <canvas>
 */

(function() {
  var Circle;

  Circle = (function() {
    function Circle(canvas) {
      if (canvas[0].getContext != null) {
        this.context = canvas[0].getContext('2d');
      }
      this.specs = {
        x: 400,
        y: 200,
        radius: 100,
        color: 'cyan',
        stroke: 'red'
      };
    }

    Circle.prototype.set = function(specs) {
      this.specs = specs;
      this.draw();
      return this;
    };

    Circle.prototype.get = function() {
      return this.specs;
    };

    Circle.prototype.clear = function() {
      return this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);
    };

    Circle.prototype.paste = function(specs) {
      this.specs = specs;
      this.context.beginPath();
      this.context.fillStyle = this.specs.color;
      this.context.strokeStyle = this.specs.stroke;
      this.context.arc(this.specs.x, this.specs.y, this.specs.radius, 0, 2 * Math.PI, true);
      this.context.fill();
      this.context.stroke();
      return this;
    };

    Circle.prototype.getLeft = function() {
      var left;
      left = this.specs.x - this.specs.radius;
      return this.left;
    };

    Circle.prototype.getRight = function() {
      var right;
      right = this.specs.x + this.specs.radius;
      return this.right;
    };

    Circle.prototype.getTop = function() {
      var top;
      top = this.specs.y - this.specs.radius;
      return this.top;
    };

    Circle.prototype.getBottom = function() {
      var bottom;
      bottom = this.specs.y + this.specs.radius;
      return this.bottom;
    };

    Circle.prototype.draw = function() {
      if (this.context == null) {
        return;
      }
      this.context.setTransform(1, 0, 0, 1, 0, 0);
      this.context.clearRect(0, 0, this.context.canvas.width, this.context.canvas.height);
      this.context.beginPath();
      this.context.fillStyle = this.specs.color;
      this.context.strokeStyle = this.specs.stroke;
      this.context.arc(this.specs.x, this.specs.y, this.specs.radius, 0, 2 * Math.PI, true);
      this.context.fill();
      this.context.stroke();
      return this;
    };

    Circle.prototype.reDraw = function() {
      if (this.context == null) {
        return;
      }
      this.context.fillStyle = this.specs.color;
      this.context.strokeStyle = this.specs.stroke;
      this.context.arc(this.specs.x, this.specs.y, this.specs.radius, 0, 2 * Math.PI, true);
      this.context.fill();
      this.context.stroke();
      return this;
    };

    if (window.JS == null) {
      window.JS = {};
    }

    window.JS.Circle = Circle;

    return Circle;

  })();


  /*
   */

}).call(this);
