// Generated by CoffeeScript 1.7.1

/*
Tests JS.File's reading and writing of data to local files using HTML5:
  1) Checks b=the browser's compatibility with HTML5 File-related APIs
  2) Shows numerous mime types and theri association with file extensions
  3) Provides a buttons that upon clicking reads data from a file and displays it
  3) Provides a buttons that upon clicking writes a file filled with text entered in a text area
Copyright 2014 Jan Stelovsky; MIT license (= use as you wish, don't complain:)
 */

(function() {
  $(function() {
    var dom, id, onFile, onRead, onReadError, onWriteError, onWritten, report, test, _i, _len, _ref;
    dom = {};
    _ref = ['messages', 'types', 'read', 'write', 'read_data', 'write_data'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      id = _ref[_i];
      dom[id] = $("#" + id);
    }
    report = function(message) {
      return $('<li>').html(message).appendTo(dom.messages);
    };
    onRead = function(data) {
      report("Successfully read the file '" + this.file.name + "'");
      return dom.read_data.html(data);
    };
    onFile = function(file) {
      this.file = file;
      return report("Reading '" + this.file.name + "' type=" + this.file.type + " " + this.file.size + " bytes");
    };
    onWritten = function() {
      return report("Successfully written the file '" + this.file.name + "'");
    };
    onReadError = function(message) {
      return report("Failed to read the file '" + this.file.name + "': " + message);
    };
    onWriteError = function(message) {
      return report("Failed to write the file '" + this.file.name + "': " + message);
    };
    test = function() {
      var extension, extensions, fileName, type, types, _j, _len1;
      report(JS.File.support());
      if (!JS.File.canRead()) {
        report("Your browser can't read files.");
      }
      if (!JS.File.canWrite()) {
        report("Your browser can't write files.");
      }
      extensions = ['txt', 'png', 'jpg', 'html', 'css', 'xml', 'dtd', 'mpg', 'json', 'pdf', 'zip', 'ppt', 'csv', 'svg', 'coffee'];
      types = '';
      for (_j = 0, _len1 = extensions.length; _j < _len1; _j++) {
        extension = extensions[_j];
        fileName = "sample." + extension;
        type = JS.File.type(fileName);
        types += "Mime type of '" + fileName + "' is '" + type + "'\n";
      }
      dom.types.html(types);
      dom.read.click(function() {
        return JS.File.read(onRead, onReadError, onFile);
      });
      dom.write.click(function() {
        var data;
        report("Writing to the file 'data.txt'");
        data = dom.write_data.html();
        return JS.File.write('data.txt', data, onWriteError, onWritten);
      });
      return null;
    };
    return setTimeout(test, 1000);
  });


  /*
  coffee -cwo /Users/jan/parwinr/parvina.co.nf/parvina.co.nf/javascripts/ /Users/jan/parwinr/parvina.co.nf/parvina.co.nf/coffeescripts/
   */

}).call(this);
